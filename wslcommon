# -*- mode: sh; coding: utf-8-unix -*-

function winpath() {
    /bin/wslpath -w "$@" 2> /dev/null
}

function wslpath() {
    /bin/wslpath -u "$@" 2> /dev/null
}

function drvfs_p() {
    local win_path=$(winpath -a "$1")
    if [ $? -eq 0 ] && [[ ! "$win_path" =~ ^'\\wsl$\' ]]; then
        return 0
    else
        return 1
    fi
}

function escape() {
    # https://thinca.hatenablog.com/entry/20100210/1265813598
    echo "$1" | sed 's/[&|<>^"%]/^&/g'
}

function cmd0() {
    cmd.exe /c "$@" | sed 's/\r$//'
    return ${PIPESTATUS[0]}
}

documents_win_path=$(cmd0 echo %USERPROFILE% 2> /dev/null)'\Documents'
documents_wsl_path=$(wslpath "$documents_win_path")

function cmd1() {
    (
        cd "$documents_wsl_path"
        cmd0 "$@"
    )
}

function cmd() {
    # 引数をescapeする
    local args=()
    for arg; do
        args+=("$(escape "$arg")")
    done
    set -- "${args[@]}"

    cmd1 "$@"
}

function start() {
    # cmd内から呼んでいるcmd.exeのために引数を一回escapeする
    local args=()
    for arg; do
        args+=("$(escape "$arg")")
    done
    set -- "${args[@]}"

    # パスに半角スペースを含まず、全角スペースを含んでいる場合、start コマンドが正常に
    # 動作しない。パスの後ろに半角スペースを入れることで正常に動作するのでその対策を
    # 追加した。
    local command=$1
    if [[ "$command" =~ '　' ]]; then
        command+=' '
    fi
    shift

    # 本コマンドから起動したアプリにフォーカスが移らないことがある場合の対策を実施。
    # （コンソールから本コマンドを起動した場合には「対策前の設定」でも問題ないが、
    #   X サーバ上に起動した emacs から本コマンドを起動すると現象が発生するため。）
    # cmd start "" "$command" "$@" # ← 対策前の設定
    cmd start /b cmd.exe /c start "" "$command" "$@"
}
